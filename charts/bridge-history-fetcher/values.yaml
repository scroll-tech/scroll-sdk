global:
  nameOverride: &app_name bridge-history-fetcher
  fullnameOverride: *app_name

controller:
  replicas: 1
  strategy: RollingUpdate
  type: deployment

image:
  repository: scrolltech/bridgehistoryapi-fetcher
  pullPolicy: Always
  tag: v4.4.14

command:
  [
    "/bin/sh",
    "-c",
    "bridgehistoryapi-fetcher --config /app/conf/bridge-history-config.json --metrics --metrics.addr 0.0.0.0 --metrics.port ${METRICS_PORT} --log.debug",
  ]

env:
  - name: METRICS_PORT
    value: "8090"

service:
  main:
    enabled: true
    ports:
      http:
        enabled: true
        port: 8080
      metrics:
        enabled: true
        port: 8090
        targetPort: 8090

persistence:
  bridge-history-fetcher:
    enabled: true
    type: configMap
    mountPath: /app/conf/
    name: bridge-history-config
  init-db:
    enabled: true
    type: configMap
    mountPath: /init-db.sh
    name: init-db
    defaultMode: "0777"
  migrate-db:
    enabled: true
    type: configMap
    mountPath: /config/migrate-db.json
    name: bridge-history-fetcher-migrate-db
    defaultMode: "0777"
  wait-for-l1-script:
    enabled: true
    type: configMap
    name: wait-for-l1-script
    defaultMode: "0777"

resources:
  requests:
    memory: "100Mi"
    cpu: "50m"
  limits:
    memory: "500Mi"
    cpu: "100m"

defaultProbes: &default_probes
  enabled: true
  custom: true
  spec:
    httpGet:
      path: "/health"
      port: 8090

probes:
  liveness:
    <<: *default_probes
  readiness:
    <<: *default_probes
  startup:
    <<: *default_probes

initContainers:
  1-wait-for-postgres:
    image: atkrad/wait4x:latest
    args:
      - tcp
      - $(DATABASE_HOST):$(DATABASE_PORT)
      - --timeout
      - "0"
    envFrom:
      - configMapRef:
          name: bridge-history-fetcher-env
  2-init-db:
    image: postgres:latest
    env:
      - name: POSTGRES_DB
        value: scroll
      - name: PG_USER
        valueFrom:
          configMapKeyRef:
            name: db-secrets
            key: PG_USER
      - name: PGPASSWORD
        valueFrom:
          configMapKeyRef:
            name: db-secrets
            key: PGPASSWORD
      - name: PG_HOST
        valueFrom:
          configMapKeyRef:
            name: db-secrets
            key: PG_HOST
      - name: PG_PORT
        valueFrom:
          configMapKeyRef:
            name: db-secrets
            key: PG_PORT
      - name: DB_USER
        value: gas_oracle
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: db-secrets
            key: GAS_ORACLE_PASSWORD
    command: ["bash", "-c", "./init-db.sh"]
    volumeMounts:
      - name: init-db
        mountPath: /init-db.sh
        subPath: init-db.sh
  3-check-postgres-connection:
    image: atkrad/wait4x:latest
    args:
      - postgresql
      - $(DATABASE_URL)
      - --timeout
      - "0"
    envFrom:
      - configMap:
          name: bridge-history-fetcher-env
  4-migrate-db:
    image: scrolltech/bridgehistoryapi-db-cli:v4.4.14
    command: ["/bin/sh", "-c", "db_cli --config /config/migrate-db.json migrate"]
    volumeMounts:
      - name: migrate-db
        mountPath: /config/migrate-db.json
        subPath: migrate-db.json
  5-wait-for-l1:
    image: scrolltech/scroll-alpine:v0.0.1
    command:
      - /bin/sh
      - -c
      - /wait-for-l1.sh $SCROLL_L1_RPC
    envFrom:
      - configMapRef:
          name: bridge-history-fetcher-env
    volumeMounts:
      - name: wait-for-l1-script
        mountPath: /wait-for-l1.sh
        subPath: wait-for-l1.sh
  6-wait-for-l2-sequencer:
    image: atkrad/wait4x:latest
    args:
      - http
      - $(SCROLL_L2_RPC)
      - --expect-status-code
      - "200"
      - --timeout
      - "0"
    envFrom:
      - configMapRef:
          name: bridge-history-fetcher-env

# TODO remove this
configMaps:
  migrate-db:
    enabled: true
    data:
      migrate-db.json: |
        {
          "l1": {},
          "l2": {},
          "db": {
            "driver_name": "postgres",
            "maxOpenNum": 50,
            "maxIdleNume": 5,
            "dsn": "postgres://postgres:qwerty12345@postgresql:5432/scroll?sslmode=disable"
          }
        }

serviceMonitor:
  main:
    enabled: true
    labels:
      release: scroll-sdk
    serviceName: '{{ include "scroll.common.lib.chart.names.fullname" $ }}'
    endpoints:
      - port: metrics
        interval: 1m
        scrapeTimeout: 10s
