---
global:
  nameOverride: &app_name chain-monitor
  fullnameOverride: *app_name

image:
  repository: scrolltech/chain-monitorv2
  pullPolicy: Always
  tag: v1.1.29

env:
  - name: CHAIN_MONITOR_SERVER_PORT
    value: 8080
  - name: CHAIN_MONITOR_METRICS_PORT
    value: 8090

envFrom:
  - configMapRef:
      name: chain-monitor-env

command:
  [
    "/bin/sh",
    "-c",
    "chain-monitor --config /app/config/chain-monitor-config.json --http --http.port ${CHAIN_MONITOR_SERVER_PORT} \
    --metrics --metrics.addr 0.0.0.0 --metrics.port ${CHAIN_MONITOR_METRICS_PORT} \
     --verbosity 3"
  ]

resources:
  requests:
    memory: "100Mi"
    cpu: "50m"
  limits:
    memory: "500Mi"
    cpu: "100m"

persistence:
  *app_name:
    enabled: true
    type: configMap
    mountPath: /app/config/
    name: chain-monitor-config
  wait-for-l1-script:
    enabled: true
    type: configMap
    name: wait-for-l1-script
    defaultMode: "0777"
  wait-for-contracts-script:
    enabled: true
    type: configMap
    name: wait-for-contracts-script
    defaultMode: "0777"

service:
  main:
    enabled: true
    ports:
      http:
        enabled: true
        port: 8080
      metrics:
        enabled: true
        port: 8090
        targetPort: 8090

defaultProbes: &default_probes
  enabled: false

probes:
  liveness:
    <<: *default_probes
  readiness:
    <<: *default_probes
  startup:
    <<: *default_probes

initContainers:
  1-check-postgres-connection:
    image: atkrad/wait4x:latest
    args:
      - postgresql
      - $(SCROLL_CHAIN_MONITOR_DB_CONFIG_DSN)
      - --timeout
      - "0"
    envFrom:
      - configMapRef:
          name: chain-monitor-env
  2-migrate-db:
    image: scrolltech/chain-monitorv2:v1.1.29
    command:
      - /bin/sh
      - -c
      - chain-monitor --config /app/config/chain-monitor-config.json --db --db.migrate
    volumeMounts:
      - name: *app_name
        mountPath: /app/config/
    envFrom:
      - configMapRef:
          name: chain-monitor-env
  3-wait-for-l1:
    image: scrolltech/scroll-alpine:v0.0.1
    command:
      - /bin/sh
      - -c
      - /wait-for-l1.sh $SCROLL_L1_RPC
    envFrom:
      - configMapRef:
          name: chain-monitor-env
    volumeMounts:
      - name: wait-for-l1-script
        mountPath: /wait-for-l1.sh
        subPath: wait-for-l1.sh
  4-wait-for-l2-sequencer:
    image: atkrad/wait4x:latest
    args:
      - http
      - http://l2-sequencer:8545
      - --expect-status-code
      - "200"
      - --timeout
      - "0"
  5-wait-for-contract:
    image: scrolltech/scroll-alpine:v0.0.1
    command:
      - /bin/sh
      - -c
      - /wait-for-contract.sh $SCROLL_L1_RPC $L1_SCROLL_CHAIN_PROXY_ADDR
    envFrom:
      - configMapRef:
          name: chain-monitor-env
    volumeMounts:
      - name: wait-for-contracts-script
        mountPath: /wait-for-contract.sh
        subPath: wait-for-contract.sh

serviceMonitor:
  main:
    enabled: true
    labels:
      release: scroll-sdk
    serviceName: '{{ include "scroll.common.lib.chart.names.fullname" $ }}'
    endpoints:
      - port: metrics
        interval: 1m
        scrapeTimeout: 10s

scrollConfig: |
  {}
