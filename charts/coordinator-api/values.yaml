---
controller:
  replicas: 1
  strategy: RollingUpdate
  type: statefulset

global:
  nameOverride: &app_name coordinator-api
  fullnameOverride: *app_name

image:
  repository: scrolltech/coordinator-api
  pullPolicy: Always
  tag: v4.4.26-devnet

env:
  - name: HTTP_PORT
    value: 8080
  - name: METRICS_PORT
    value: 8090
  - name: RUST_LOG
    value: info
  - name: SCROLL_PROVER_ASSETS_DIR
    value: "/data/assets/"

command: [
  "/bin/sh",
  "-c",
  "coordinator_api --config /coordinator/conf/coordinator-config.json \
    --genesis /app/genesis/genesis.json \
    --http --http.addr '0.0.0.0' --http.port ${HTTP_PORT} \
    --metrics --metrics.addr '0.0.0.0' --metrics.port ${METRICS_PORT} \
    --log.debug"
]

resources:
  requests:
    memory: "20Gi"
    cpu: "50m"
  limits:
    memory: "24Gi"
    cpu: "200m"

persistence:
  *app_name:
    enabled: true
    type: configMap
    mountPath: /coordinator/conf/
    name: coordinator-api-config
  download-params:
    enabled: true
    type: configMap
    mountPath: /download-params.sh
    name: coordinator-api-download-params
    defaultMode: "0777"
  genesis:
    enabled: true
    type: configMap
    mountPath: /app/genesis/
    name: genesis-config

volumeClaimTemplates:
  - name: verifier
    accessMode: "ReadWriteOnce"
    size: "100Gi"
    storageClass: "ebs-sc-retain"
    mountPath: "/verifier"

service:
  main:
    enabled: true
    ports:
      http:
        enabled: true
        port: 80
        targetPort: 8080
      metrics:
        enabled: true
        port: 8090
        targetPort: 8090

defaultProbes: &default_probes
  enabled: false
  custom: true
  spec:
    httpGet:
      path: "/"
      port: 8090

probes:
  liveness:
    <<: *default_probes
  readiness:
    <<: *default_probes
  startup:
    <<: *default_probes

initContainers:
  parameter-download:
    image: ubuntu
    command: ["sh", "-c", "/download-params.sh "]
    env:
      - name: RELEASE_VERSION
        value: "v0.11.4"
    volumeMounts:
      - name: verifier
        mountPath: /data
      - name: download-params
        mountPath: /download-params.sh
        subPath: download-params.sh
    resources:
      requests:
        memory: "2Gi"
        cpu: "1"
      limits:
        memory: "4Gi"
        cpu: "2"

configMaps:
  download-params:
    enabled: true
    data:
      download-params.sh: |
        #!/bin/sh
        apt update
        apt install wget libdigest-sha-perl -y

        P_CHECKSUMS=$(wget -O- https://circuit-release.s3.us-west-2.amazonaws.com/setup/sha256sum)
        DOWNLOAD_RESULT=$?
        ERROR=$(echo "$P_CHECKSUMS" | grep "Error")

        if [ $DOWNLOAD_RESULT -ne 0 ] || [ "$ERROR" != "" ]; then
        echo "Failed to download params checksums"
        echo "$P_CHECKSUMS"
        exit 1
        fi

        R_CHECKSUMS=$(wget -O- https://circuit-release.s3.us-west-2.amazonaws.com/release-$RELEASE_VERSION/sha256sum)
        DOWNLOAD_RESULT=$?
        ERROR=$(echo "$R_CHECKSUMS" | grep "Error")

        if [ $DOWNLOAD_RESULT -ne 0 ] || [ "$ERROR" != "" ]; then
        echo "Failed to download release checksum"
        echo "$R_CHECKSUMS"
        exit 1
        fi

        PARAMS20_SHASUM=$(echo "$P_CHECKSUMS" | grep "params20" | cut -d " " -f 1)
        PARAMS21_SHASUM=$(echo "$P_CHECKSUMS" | grep "params21" | cut -d " " -f 1)
        PARAMS24_SHASUM=$(echo "$P_CHECKSUMS" | grep "params24" | cut -d " " -f 1)
        PARAMS25_SHASUM=$(echo "$P_CHECKSUMS" | grep "params25" | cut -d " " -f 1)
        PARAMS26_SHASUM=$(echo "$P_CHECKSUMS" | grep "params26" | cut -d " " -f 1)
        CHUNK_VK_SHASUM=$(echo "$R_CHECKSUMS" | grep "chunk_vk.vkey" | cut -d " " -f 1)
        BATCH_VK_SHASUM=$(echo "$R_CHECKSUMS" | grep "agg_vk.vkey" | cut -d " " -f 1)
        VRFR_SHASUM=$(echo "$R_CHECKSUMS" | grep "evm_verifier.bin" | cut -d " " -f 1)
        CFG2_SHASUM=$(echo "$R_CHECKSUMS" | grep "layer2.config" | cut -d " " -f 1)
        CFG4_SHASUM=$(echo "$R_CHECKSUMS" | grep "layer4.config" | cut -d " " -f 1)

        check_shasum () {
        SHASUM=$(shasum -a 256 $1 | cut -d " " -f 1)
        if [ "$SHASUM" != "$2" ]; then
        echo "Shasum mismatch: expected=$2, actual=$SHASUM"
          return 1;
          else
          return 0;
          fi
        }
        # check existing file checksums
        if [ -f /data/params/params20 ]; then
        if ! check_shasum "/data/params/params20" "$PARAMS20_SHASUM"; then
        echo "Removing incorrect file /data/params/params20\n"
        rm /data/params/params20
        fi
        fi

        if [ -f /data/params/params21 ]; then
        if ! check_shasum "/data/params/params21" "$PARAMS21_SHASUM"; then
        echo "Removing incorrect file /data/params/params21\n"
        rm /data/params/params21
        fi
        fi

        if [ -f /data/params/params24 ]; then
        if ! check_shasum "/data/params/params24" "$PARAMS24_SHASUM"; then
        echo "Removing incorrect file /data/params/params24\n"
        rm /data/params/params24
        fi
        fi

        if [ -f /data/params/params25 ]; then
        if ! check_shasum "/data/params/params25" "$PARAMS25_SHASUM"; then
        echo "Removing incorrect file /data/params/params25\n"
        rm /data/params/params25
        fi
        fi

        if [ -f /data/params/params26 ]; then
        if ! check_shasum "/data/params/params26" "$PARAMS26_SHASUM"; then
        echo "Removing incorrect file /data/params/params26\n"
        rm /data/params/params26
        fi
        fi

        if [ -f /data/assets/chunk_vk.vkey ]; then
        if ! check_shasum "/data/assets/chunk_vk.vkey" "$CHUNK_VK_SHASUM"; then
        echo "Removing incorrect file /data/assets/chunk_vk.vkey\n"
        rm /data/assets/chunk_vk.vkey
        fi
        fi

        if [ -f /data/assets/agg_vk.vkey ]; then
        if ! check_shasum "/data/assets/agg_vk.vkey" "$BATCH_VK_SHASUM"; then
        echo "Removing incorrect file /data/assets/agg_vk.vkey\n"
        rm /data/assets/agg_vk.vkey
        fi
        fi

        if [ -f /data/assets/evm_verifier.bin ]; then
        if ! check_shasum "/data/assets/evm_verifier.bin" "$VRFR_SHASUM"; then
        echo "Removing incorrect file /data/assets/evm_verifier.bin\n"
        rm /data/assets/evm_verifier.bin
        fi
        fi

        if [ -f /data/assets/layer2.config ]; then
        if ! check_shasum "/data/assets/layer2.config" "$CFG2_SHASUM"; then
        echo "Removing incorrect file /data/assets/layer2.config\n"
        rm /data/assets/layer2.config
        fi
        fi

        if [ -f /data/assets/layer4.config ]; then
        if ! check_shasum "/data/assets/layer4.config" "$CFG4_SHASUM"; then
        echo "Removing incorrect file /data/assets/layer4.config\n"
        rm /data/assets/layer4.config
        fi
        fi


        # download missing files

        if [ ! -f /data/params/params20 ]; then
        mkdir -p /data/params
        echo "Downloading /data/params/params20..."
        wget https://circuit-release.s3.us-west-2.amazonaws.com/setup/params20 -O /data/params/params20
        echo "Download completed\n"
        if ! check_shasum "/data/params/params20" "$PARAMS20_SHASUM"; then exit 1; fi
        fi

        if [ ! -f /data/params/params21 ]; then
        mkdir -p /data/params
        echo "Downloading /data/params/params21..."
        wget https://circuit-release.s3.us-west-2.amazonaws.com/setup/params21 -O /data/params/params21
        echo "Download completed\n"
        if ! check_shasum "/data/params/params21" "$PARAMS21_SHASUM"; then exit 1; fi
        fi

        if [ ! -f /data/params/params24 ]; then
        mkdir -p /data/params
        echo "Downloading /data/params/params24..."
        wget https://circuit-release.s3.us-west-2.amazonaws.com/setup/params24 -O /data/params/params24
        echo "Download completed\n"
        if ! check_shasum "/data/params/params24" "$PARAMS24_SHASUM"; then exit 1; fi
        fi

        if [ ! -f /data/params/params25 ]; then
        mkdir -p /data/params
        echo "Downloading /data/params/params25..."
        wget https://circuit-release.s3.us-west-2.amazonaws.com/setup/params25 -O /data/params/params25
        echo "Download completed\n"
        if ! check_shasum "/data/params/params25" "$PARAMS25_SHASUM"; then exit 1; fi
        fi

        if [ ! -f /data/params/params26 ]; then
        mkdir -p /data/params
        echo "Downloading /data/params/params26..."
        wget https://circuit-release.s3.us-west-2.amazonaws.com/setup/params26 -O /data/params/params26
        echo "Download completed\n"
        if ! check_shasum "/data/params/params26" "$PARAMS26_SHASUM"; then exit 1; fi
        fi

        if [ ! -f /data/assets/chunk_vk.vkey ]; then
        mkdir -p /data/assets
        echo "Downloading /data/assets/chunk_vk.vkey..."
        wget https://circuit-release.s3.us-west-2.amazonaws.com/release-$RELEASE_VERSION/chunk_vk.vkey -O /data/assets/chunk_vk.vkey
        echo "Download completed\n"
        if ! check_shasum "/data/assets/chunk_vk.vkey" "$CHUNK_VK_SHASUM"; then exit 1; fi
        fi

        if [ ! -f /data/assets/agg_vk.vkey ]; then
        mkdir -p /data/assets
        echo "Downloading /data/assets/agg_vk.vkey..."
        wget https://circuit-release.s3.us-west-2.amazonaws.com/release-$RELEASE_VERSION/agg_vk.vkey -O /data/assets/agg_vk.vkey
        echo "Download completed\n"
        if ! check_shasum "/data/assets/agg_vk.vkey" "$BATCH_VK_SHASUM"; then exit 1; fi
        fi

        if [ ! -f /data/assets/evm_verifier.bin ]; then
        mkdir -p /data/assets
        echo "Downloading /data/assets/evm_verifier.bin..."
        wget https://circuit-release.s3.us-west-2.amazonaws.com/release-$RELEASE_VERSION/evm_verifier.bin -O /data/assets/evm_verifier.bin
        echo "Download completed\n"
        if ! check_shasum "/data/assets/evm_verifier.bin" "$VRFR_SHASUM"; then exit 1; fi
        fi

        if [ ! -f /data/assets/layer2.config ]; then
        mkdir -p /data/assets
        echo "Downloading /data/assets/layer2.config..."
        wget https://circuit-release.s3.us-west-2.amazonaws.com/release-$RELEASE_VERSION/layer2.config -O /data/assets/layer2.config
        echo "Download completed\n"
        if ! check_shasum "/data/assets/layer2.config" "$CFG2_SHASUM"; then exit 1; fi
        fi

        if [ ! -f /data/assets/layer4.config ]; then
        mkdir -p /data/assets
        echo "Downloading /data/assets/layer4.config..."
        wget https://circuit-release.s3.us-west-2.amazonaws.com/release-$RELEASE_VERSION/layer4.config -O /data/assets/layer4.config
        echo "Download completed\n"
        if ! check_shasum "/data/assets/layer4.config" "$CFG4_SHASUM"; then exit 1; fi
        fi

        ls -l /data/assets

serviceMonitor:
  main:
    enabled: true
    labels:
      release: scroll-sdk
    serviceName: '{{ include "scroll.common.lib.chart.names.fullname" $ }}'
    endpoints:
      - port: metrics
        interval: 1m
        scrapeTimeout: 10s

ingress:
  main:
    enabled: true
    primary: true
    annotations: {}
    labels: {}
    ingressClassName: "nginx"
    hosts:
      - host: coordinator-api.scrollsdk
        paths:
          - path: /
            pathType: Prefix
