---
global:
  nameOverride: &app_name l2-bootnode
  fullnameOverride: *app_name

controller:
  replicas: 1
  strategy: RollingUpdate
  type: statefulset

image:
  repository: scrolltech/l2geth
  pullPolicy: Always
  tag: scroll-v5.7.25

env:
  - name: L2GETH_L1_CONTRACT_DEPLOYMENT_BLOCK
    value: "0"
  - name: L2GETH_L1_WATCHER_CONFIRMATIONS
    value: "0x6"
  - name: L2GETH_P2P_PORT
    value: 30303
  - name: L2GETH_CCC_FLAG
    value: "--ccc"
  - name: L2GETH_CCC_NUMWORKERS
    value: "5"
  - name: L2GETH_MAX_PEERS
    value: 500
  - name: VERBOSITY
    value: 3
  - name: L2GETH_MIN_GAS_PRICE
    value: "1000000"
  - name: L2GETH_GLOBAL_QUEUE
    value: "4096"
  - name: L2GETH_ACCOUNT_QUEUE
    value: "256"
  - name: L2GETH_GLOBAL_SLOTS
    value: "40960"
  - name: L2GETH_ACCOUNT_SLOTS
    value: "128"
  - name: L2GETH_EXTRA_PARAMS
    value: ""

envFrom:
  - configMapRef:
      name: l2-bootnode-env

command:
  [
    "bash",
    "-c",
    "geth --datadir \"/l2geth/data\" init /l2geth/genesis/genesis.json && \
    echo ${L2GETH_NODEKEY} > /l2geth/data/geth/nodekey && \
    echo \"[Node.P2P] StaticNodes = $L2GETH_PEER_LIST\" > \"/l2geth/config.toml\" && \
    geth --datadir \"/l2geth/data\" \
    --port \"$L2GETH_P2P_PORT\" --syncmode full --networkid \"$CHAIN_ID\" --maxpeers \"$L2GETH_MAX_PEERS\" --netrestrict \"$L2GETH_NETRESTRICT\" --nat \"$L2GETH_NAT\" \
    --bootnodes \"\" \
    --gcmode archive \
    --config \"/l2geth/config.toml\" \
    --cache.noprefetch \
    --verbosity 3 \
    --pprof --pprof.addr \"0.0.0.0\" --pprof.port 6060 \
    $L2GETH_CCC_FLAG --ccc.numworkers \"$L2GETH_CCC_NUMWORKERS\" \
    $METRICS_FLAGS \
    --txpool.globalqueue \"$L2GETH_GLOBAL_QUEUE\" --txpool.accountqueue \"$L2GETH_ACCOUNT_QUEUE\" \
    --txpool.globalslots \"$L2GETH_GLOBAL_SLOTS\" --txpool.accountslots \"$L2GETH_ACCOUNT_SLOTS\" \
    --txpool.pricelimit \"$L2GETH_MIN_GAS_PRICE\" $LOCALS_FLAG \
    --l1.endpoint \"$L2GETH_L1_ENDPOINT\" --l1.confirmations \"$L2GETH_L1_WATCHER_CONFIRMATIONS\" --l1.sync.startblock \"$L2GETH_L1_CONTRACT_DEPLOYMENT_BLOCK\" \
    --miner.gasprice \"$L2GETH_MIN_GAS_PRICE\" --rpc.gascap 0 \
    --gpo.ignoreprice \"$L2GETH_MIN_GAS_PRICE\" \
    --metrics --metrics.expensive \
    $L2GETH_EXTRA_PARAMS"
  ]

initContainers:
  wait-for-l1:
    image: scrolltech/scroll-alpine:v0.0.1
    command:
      - /bin/sh
      - -c
      - /wait-for-l1.sh $L2GETH_L1_ENDPOINT
    envFrom:
      - configMapRef:
          name: l2-bootnode-env
    volumeMounts:
      - name: wait-for-l1-script
        mountPath: /wait-for-l1.sh
        subPath: wait-for-l1.sh

defaultProbes: &default_probes
  enabled: false
  custom: true
  spec:
    httpGet:
      path: "/"
      port: 8545

probes:
  liveness:
    <<: *default_probes
  readiness:
    <<: *default_probes
  startup:
    <<: *default_probes

persistence:
  data:
    enabled: true
    type: pvc
    mountPath: /l2geth/data
    accessMode: ReadWriteOnce
    size: 10Gi
  env:
    enabled: true
    type: configMap
    mountPath: /config/
    name: l2-bootnode-env
  genesis:
    enabled: true
    type: configMap
    mountPath: /l2geth/genesis/
    name: genesis-config
  wait-for-l1-script:
    enabled: true
    type: configMap
    name: wait-for-l1-script
    defaultMode: "0777"

service:
  main:
    enabled: true
    ports:
      http:
        enabled: true
        port: 30303
      metrics:
        enabled: true
        port: 6060
        targetPort: 6060

serviceMonitor:
  main:
    enabled: true
    labels:
      release: scroll-sdk
    serviceName: '{{ include "scroll.common.lib.chart.names.fullname" $ }}'
    endpoints:
      - port: metrics
        interval: 1m
        scrapeTimeout: 10s
        path: /debug/metrics/prometheus
