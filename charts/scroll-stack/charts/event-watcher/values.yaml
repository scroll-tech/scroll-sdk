---
global:
  nameOverride: &app_name event-watcher
  fullnameOverride: *app_name

controller:
  annotations:
    secret.reloader.stakater.com/reload: "event-watcher,event-watcher-genesis"

image:
  repository: scrolltech/event-watcher
  pullPolicy: Always
  tag: v4.4.14

command:
  [
    "/bin/sh",
    "-c",
    "event_watcher --config /app/conf/rollup-config.json --metrics --metrics.addr 0.0.0.0 --metrics.port ${METRICS_PORT} --log.debug",
  ]

podLabels:
  app: "event-watcher"
  dbaccess: "true"

initContainers:
  init-db:
    image: postgres:latest
    env:
      - name: POSTGRES_DB
        value: scroll
      - name: PG_USER
        valueFrom:
          secretKeyRef:
            name: db-secrets
            key: PG_USER
      - name: PGPASSWORD
        valueFrom:
          secretKeyRef:
            name: db-secrets
            key: PGPASSWORD
      - name: PG_HOST
        valueFrom:
          secretKeyRef:
            name: db-secrets
            key: PG_HOST
      - name: PG_PORT
        valueFrom:
          secretKeyRef:
            name: db-secrets
            key: PG_PORT
      - name: DB_USER
        value: event_watcher
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: db-secrets
            key: EVENT_WATCHER_PASSWORD
    command: ["bash","-c","./init-db.sh"]
    volumeMounts:
      - name: init-db
        mountPath: /init-db.sh
        subPath: init-db.sh
  migrate-db:
    image: scrolltech/rollup-db-cli
    command: ["/bin/sh","-c","db_cli migrate --config /config/migrate-db.json"]
    volumeMounts:
      - name: migrate-db
        mountPath: /config/migrate-db.json
        subPath: migrate-db.json
  wait-for-other-pod:
    image: curlimages/curl
    args:
      - /bin/sh
      - -c
      - >
        set -x;
        while [ $(curl -sw '%{http_code}' "l2-sequencer:8545" -o /dev/null) -ne 200 ] && 
        [ $(curl -sw '%{http_code}' "l1-devnet:8545" -o /dev/null) -ne 404 ]; do
          sleep 5;
        done

resources:
  requests:
    memory: "100Mi"
    cpu: "50m"
  limits:
    memory: "500Mi"
    cpu: "100m"

persistence:
  event-watcher:
    enabled: yes
    type: configMap
    mountPath: /app/conf/
    name: rollup-node-config
  genesis:
    enabled: yes
    type: configMap
    mountPath: /app/genesis/
    subPath: genesis.json
    name: genesis-config
  init-db:
    enabled: yes
    type: configMap
    mountPath: /init-db.sh
    name: init-db
    defaultMode: "0777"
  migrate-db:
    enabled: yes
    type: configMap
    mountPath: /config/migrate-db.json
    name: event-watcher-migrate-db
    defaultMode: "0777"


service:
  main:
    enabled: true
    ports:
      http:
        enabled: true
        port: 80
      metrics:
        enabled: true
        port: 8090
        targetPort: 8090

defaultProbes: &default_probes
  enabled: true
  custom: true
  spec:
    httpGet:
      path: "/health"
      port: 8090

probes:
  liveness:
    << : *default_probes
  readiness:
    << : *default_probes
  startup:
    << : *default_probes

env:
  - name: METRICS_PORT
    value: 8090

configMaps:
  migrate-db:
    enabled: true
    data:
      migrate-db.json: |
        {
            "driver_name": "postgres",
            "dsn": "postgres://postgres:qwerty12345@postgresql:5432/scroll?sslmode=disable"
        }

serviceMonitor:
  main:
    enabled: true
    labels:
      release: scroll-stack
    serviceName: '{{ include "bjw-s.common.lib.chart.names.fullname" $ }}'
    endpoints:
      - port: metrics
        interval: 1m
        scrapeTimeout: 10s
