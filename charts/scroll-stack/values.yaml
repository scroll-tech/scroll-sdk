---
l1-devnet:
  enabled: true
  ingress:
    main:
      enabled: true
      ingressClassName: "nginx"
      hosts:
        - host: l1-devnet.scrollsdk
          paths:
            - path: /
              pathType: Prefix

blockscout:
  enabled: true

bridge-history-api:
  enabled: true
  ingress:
    main:
      enabled: true
      primary: true
      annotations: { }
      labels: { }
      ingressClassName: "nginx"
      hosts:
        - host: bridge-history-api.scrollsdk
          paths:
            - path: /
              pathType: Prefix

bridge-history-fetcher:
  enabled: true

balance-checker:
  enabled: false

chain-monitor:
  enabled: false

contracts:
  enabled: true

coordinator-api:
  enabled: false

coordinator-cron:
  enabled: false

event-watcher:
  enabled: true

frontends:
  enabled: true
  ingress:
    main:
      enabled: true
      hosts:
        - host: frontends.scrollsdk
          paths:
            - path: /
              pathType: Prefix

gas-oracle:
  enabled: true

grafana:
  enabled: true
  fullnameOverride: grafana
  nameOverride: grafana
  adminUser: admin
  adminPassword: scroll-stack
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-prometheus:9090
          access: proxy
          isDefault: true
          jsonData:
            timeInterval: 30s
        - name: Loki
          type: loki
          url: http://loki:3100
          access: proxy
          jsonData:
            httpHeaderName1: 'X-Scope-OrgID'
            secureJsonData:
              httpHeaderValue1: '1'
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: 'scroll'
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default/
  dashboardsConfigMaps:
    default: grafana-dashboards
  ingress:
    enabled: true
    hosts: ["grafana.scrollsdk"]

rollup-node:
  enabled: true

l1-explorer:
  enabled: true
  ingress:
    main:
      enabled: true
      ingressClassName: "nginx"
      hosts:
        - host: l1-devnet-explorer.scrollsdk
          paths:
            - path: /
              pathType: Prefix

l2-sequencer:
  enabled: true

l2-rpc:
  enabled: true
  ingress:
    main:
      enabled: true
      ingressClassName: "nginx"
      hosts:
        - host: l2-rpc.scrollsdk
          paths:
            - path: /
              pathType: Prefix

l2-bootnode:
  enabled: true

loki-stack:
  enabled: true
  loki:
    fullnameOverride: loki
    nameOverride: loki
  promtail:
    enabled: true
    fullnameOverride: promtail
    nameOverride: promtail
    config:
      clients:
        - url: http://loki:3100/loki/api/v1/push


blockscout-sc-verifier:
  enabled: false

rpc-gateway:
  enabled: true

postgresql:
  enabled: true
  nameOverride: postgresql
  fullnameOverride: postgresql
  auth:
    enablePostgresUser: true
    postgresPassword: "qwerty12345"
  volumePermissions:
    enabled: true
  primary:
    persistentVolumeClaimRetentionPolicy:
      enabled: true
      whenDeleted: Delete
      whenScaled: Delete
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    startupProbe:
      enabled: false
    resources:
      requests:
        cpu: 2
        memory: 512Mi
      limits:
        cpu: 3
        memory: 1024Mi
    extendedConfiguration: |
      max_connections = 400
  tls:
    enabled: true
    autoGenerated: true


kube-prometheus-stack:
  enabled: true
  nameOverride: prometheus
  fullnameOverride: prometheus
  prometheus:
    enabled: yes
  alertmanager:
    enabled: false
  grafana:
    enabled: false
  prometheus-node-exporter:
    nameOverride: node-exporter
    fullnameOverride: node-exporter
  kube-state-metrics:
    nameOverride: kube-state-metrics
    fullnameOverride: kube-state-metrics

# -- Database connection information. These will be used by init containers to create database, users and roles for
# -- each services. A user with admin privilege is required.
db:
  pg_host: "postgresql"
  pg_user: "postgres"
  pg_password: "qwerty12345"
  pg_port: "5432"
  bridge_history_password: "test1234"
  chain_monitor_password: "test1234"
  event_watcher_password: "test1234"
  gas_oracle_password: "test1234"
  rollup_node_password: "test1234"
  rpc_gateway_password: "test1234"